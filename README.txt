Optimization

目标: 给定向量x0和向量w, 请寻找合适的x1, 最小化test.py中的obj函数

文件说明
- solver 优化器, 其中
  - baseline*.py 是一些最基础的示例
  - top80 是一个得分位于全体参与者前 80% 的优化器
  - 你的答案应存放于 {NAME}.py
- log 保存测试结果, 其中
  - baseline*.txt 是示例优化器的结果
  - top*.txt 分别是得分位于前 80%/60%/40%/20% 的优化器的测试结果
  - 你的测试结果会存放在 {NAME}.txt
- mosek.lic mosek试用license, 您也可以自行在官网申请
- report.py 统计所有优化器的测试结果给出报告
- test.py 测试单个优化器, 其中包括测试用例的生成器
- test.sh 批量测试多个优化器

你的任务
- 实现你的优化器，即 solve 函数
- 使用 python3.8 test.py {NAME} 测试单个优化器
- 使用 test.sh 批量测试 solver 文件夹下的所有优化器并统计结果, 注意几个细节
  - 共 1000 个测例，设置了累计 600 秒的超时, 未在时限内解出所有用例会被中止程序, 已解出的用例正常计分
  - 每个测例的 score 是根据相对排名计算的, 每个测例上限 1 分
  - 官方评测会包含之前所有其它参与者的提交, 此外会更换随机种子
- 以 score 为第一优先级, time 为第二优先级改进你的优化器

推荐流程
- 阅读 test.py 和示例代码, 理解目标函数、数据分布和优化思路
- 从 n<10 的 case 入手，尝试手工寻找最优解, 发现规律
- 实现你的优化器
- 基于测试工具寻找 badcase 进行调优, 打败所有的 baseline
- 做更极致的优化
- 提交你的优化器文件

代码要求
- 禁止访问网络或文件
- 禁止创建子进程或线程
- 禁止向 stdout 打印日志
